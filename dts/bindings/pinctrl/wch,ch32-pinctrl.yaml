# Copyright (c)
# SPDX-License-Identifier: Apache-2.0

description: |
    CH32 Pin controller Node
    Based on pincfg-node.yaml binding.

    Note: `bias-disable` and `drive-push-pull` are default pin configurations.
           They will be applied in case no `bias-foo` or `driver-bar` properties
           are set.

compatible: "wch,ch32-pinctrl"

include: base.yaml

properties:
  reg:
    required: true

child-binding:
  description: |
      This binding gives a base representation of the CH32 pins configuration

  include:
    - name: pincfg-node.yaml
      property-allowlist:
        - bias-disable
        - bias-pull-down
        - bias-pull-up
        - drive-push-pull
        - drive-open-drain
        - output-low
        - output-high

  properties:
    pinmux:
      required: true
      type: int
      description: |
        Reused from
        https://github.com/torvalds/linux/blob/master/Documentation/devicetree/bindings/pinctrl/st,stm32-pinctrl.yaml
        Integer array, represents gpio pin number and mux setting.
        These defines are calculated as: ((port * 16 + line) << 8) | function
        With:
        - port: The gpio port index (PA = 0, PB = 1, ..., PK = 11)
        - line: The line offset within the port (PA0 = 0, PA1 = 1, ..., PA15 = 15)
        - function: The function number, can be:
        * 0 : Alternate Function 0
        * 1 : Alternate Function 1
        * 2 : Alternate Function 2
        * ...
        * 15 : Alternate Function 15
        * 16 : Analog
        * 17 : GPIO
        In case selected pin function is GPIO, pin is statically configured as
        a plain input/output GPIO. Default configuration is input. Output value
        can be configured by adding 'ouptut-low' or 'output-high' properties
        to the pin configuration.

        To simplify the usage, macro is available to generate "pinmux" field.
        This macro is available here:
          -include/zephyr/dt-bindings/pinctrl/ch32-pinctrl-common.h
        Some examples of macro usage:
           GPIO A9 set as alternate function 2
        ... {
                 pinmux = <CH32_PINMUX('A', 9, AF2)>;
        };
           GPIO A9 set as analog
        ... {
                 pinmux = <CH32_PINMUX('A', 9, ANALOG)>;
        };
           GPIO A9 set as GPIO output high
        ... {
                 pinmux = <CH32_PINMUX('A', 9, GPIO)>;
                 output-high;
        };

    slew-rate:
      type: string
      default: "low-speed"
      enum:
        - "low-speed"           # Default value, CH32V30x 2MHz
        - "medium-speed"        # CH32V30x 10MHz
        - "high-speed"          # CH32V30x 50MHz
      description: |
        Pin speed. Default to low-speed.
